# Calculator Grammar with Left-Recursion
# Demonstrates operator precedence using left-recursive rules

expr := addExpr

# Addition and subtraction (lowest precedence, left-associative)
addExpr := addExpr "+" mulExpr
         | addExpr "-" mulExpr
         | mulExpr

# Multiplication and division (higher precedence, left-associative)
mulExpr := mulExpr "*" expExpr
         | mulExpr "/" expExpr
         | expExpr

# Exponentiation (highest precedence, right-associative)
expExpr := primary "^" expExpr
         | primary

# Primary expressions
primary := INTEGER
         | FLOAT
         | "(" expr ")"
         | "-" primary
